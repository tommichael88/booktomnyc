<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tom Kongerslev - Professional Services</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
            background-color: #ffffff;
            text-align: center;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: .75rem;
            flex-grow: 1;
            position: relative;
            z-index: 1;
        }
        .pg_background {
            background-size: cover;
            background-position: center;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: -1;
        }
        header {
            background-color: rgba(0, 0, 0, 0.7);
            color: #ffffff;
            text-align: end;
            padding: 1rem 0;
        }
        h1, h2, h3 {
            margin: 1px 0;
        }
        .contact-button {
            background-color: #ff0000;
            color: #ffffff;
            border: none;
            padding: 5px 5px;
            font-size: 14px;
            cursor: pointer;
            margin-top: 5px;
            border-radius: 5px;
        }
        .contactModal {
            display: none;
            position: fixed;
            z-index: 2;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
        }
        .contactModal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
        }
        .contactModalClose {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .service-options {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 15px;
            margin-top: 20px;
        }
        .service-option {
            background-color: #000000;
            color: #ffffff;
            padding: 15px;
            cursor: pointer;
            text-align: center;
            font-size: 14px;
            border-radius: 5px;
        }
        .task-details {
            margin-top: 20px;
        }
        textarea {
            width: 100%;
            height: 100px;
            margin-top: 10px;
            padding: 10px;
            font-size: 16px;
        }
        .book-button {
            background-color: #ff0000;
            font-weight: bold;
            color: #ffffff;
            border: none;
            padding: 15px 30px;
            font-size: 18px;
            cursor: pointer;
            margin-top: 20px;
            border-radius: 5px;
        }
        .invoices {
            background-color: rgba(0, 0, 0, 0.7);
            color: #ffffff;
            text-align: center;
            padding: 20px 0;
            margin-top: 20px;
        }
        .client-login {
            background-color: #ff0000;
            font-weight: bold;
            color: #ffffff;
            border: none;
            padding: 15px 30px;
            font-size: 18px;
            cursor: pointer;
            margin-top: 20px;
            border-radius: 5px;
        }
        footer {
            background-color: rgba(0, 0, 0, 0.7);
            color: #ffffff;
            text-align: center;
            padding: 10px 0;
            margin-top: auto;
        }
        footer a {
            color: #ffffff;
            text-decoration: none;
            margin: 0 10px;
        }
        @media (max-width: 600px) {
            .service-options {
                grid-template-columns: 1fr;
            }
            .service-option {
                font-size: 16px;
            }
        }
        #suggestedSection {
            margin-top: 20px;
            padding: 15px;
            background-color: #f0f0f0;
            border-radius: 5px;
        }
        #suggestedSection h3 {
            margin-bottom: 10px;
        }
        .suggested-options {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 10px;
        }
        .suggested-options button, #backButton {
            background-color: #ffffff;
            border: 1px solid #000000;
            padding: 10px;
            cursor: pointer;
            border-radius: 5px;
        }
        .suggested-options button:hover, #backButton:hover {
            background-color: #e0e0e0;
        }
        #backButton {
            margin-top: 15px;
        }
        .selected-service-btn {
            background-color: rgba(200, 200, 200, 0.7);
            border: none;
            border-radius: 20px;
            padding: 8px 15px;
            margin: 5px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            color: #000000;
        }
        .selected-service-btn:hover {
            background-color: rgba(180, 180, 180, 0.9);
        }
        .remove-service {
            margin-left: 5px;
            font-weight: bold;
        }
        #selectedServicesSection {
            margin: 20px 0;
            padding: 15px;
            background-color: rgba(249, 249, 249, 0.7);
            border-radius: 10px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        .manage-visit-button {
            background-color: #43aeff;
            font-weight: bold;
            color: white;
            border: none;
            padding: 5px 5px;
            font-size: 10px;
            cursor: pointer;
            border-radius: 3px;
        }
        .contact-option-btn {
            display: block;
            width: 100%;
            padding: 10px;
            margin: 10px 0;
            background-color: #f0f0f0;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
        }
        .contact-option-btn:hover {
            background-color: #e0e0e0;
        }
    </style>
</head>
<body>
    <div class="pg_background" style="background-image: url('https://tommichael88.github.io/booktomnyc/images/redblackwhitebg.png?raw=true');"></div>
    <div class="qrc_gallery_wrapper">
        <ul class="qrc_gallery_list">
            <li>
                <img class="img-fluid" style="pointer-events: none;" src="https://github.com/tommichael88/booktomnyc/blob/main/images/invoicelogo_tomkongerslev_nobg__.png?raw=true">
            </li>
        </ul>
        <header>
            <div class="container">
                <h2>TOM KONGERSLEV &nbsp;
                    <button id="contactBtn" class="contact-button">Contact ‚â£</button>
                </h2>
            </div>
        </header>

        <div id="mycontactModal" class="contactModal">
            <div class="contactModal-content">
                <span class="contactModalClose">CLOSE</span>
                <button class="contact-option-btn" id="emailBtn">
                    <img src="https://tommichael88.github.io/booktomnyc/images/email.png" alt="Email">
                </button>
                <button class="contact-option-btn" id="callBtn">
                    <img src="https://tommichael88.github.io/booktomnyc/images/call.png" alt="Call">
                </button>
                <button class="contact-option-btn" id="contactCardBtn">
                    <img src="https://tommichael88.github.io/booktomnyc/images/contactcard.png" alt="Contact Card">
                </button>
                <button class="contact-option-btn" id="smsBtn">
                    <img src="https://tommichael88.github.io/booktomnyc/images/sms.png" alt="SMS">
                </button>
            </div>
        </div>

        <main>
            <br>
            <br>
            <br>
            <h1>üìÖ SCHEDULE SERVICE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<button class="manage-visit-button">Manage Your Visit</button></h1>
            <div class="service-options">
                <div class="service-option">Minor Home Repairs</div>
                <div class="service-option">Furniture</div>
                <div class="service-option">Wall Mounting</div>
                <div class="service-option">Electrical Help</div>
                <div class="service-option">Plumbing Help</div>
                <div class="service-option">Computer Repairs</div>
            </div>

            <div id="selectedServicesSection"></div>

            <div id="suggestedSection"></div>

            <div class="task-details" style="display: none;">
                <textarea placeholder="ü§ñ Type your task details here"></textarea>
            </div>

            <button class="book-button" style="display: none;">‚òÖ‚òÖ‚òÖ BOOK ‚òÖ‚òÖ‚òÖ</button>
            <br>
            <br>
            <hr>
        </main>

        <div class="invoices">
            <h1>INVOICES</h1>
            <p>view invoices ‚Ä¢ process payments ‚Ä¢ digital receipts ‚Ä¢ review quote estimates ‚Ä¢ share documents ‚Ä¢ transaction history ‚Ä¢ expense receipts</p>
            <button class="client-login">üîê ùóñùóüùóúùóòùó°ùóß PORTAL</button>
        </div>
        <br>
        <hr>
        <footer>
            <a href="#">Privacy Policy</a>
            <a href="#">Service Scope</a>
            <a href="#">Service Agreement</a>
        </footer>
    </div>
    <script>
document.addEventListener('DOMContentLoaded', function() {
    const mainContent = document.querySelector('main');
    const serviceOptions = document.querySelectorAll('.service-option');
    const taskDetails = document.querySelector('.task-details');
    const taskTextarea = taskDetails.querySelector('textarea');
    const bookButton = document.querySelector('.book-button');
    const selectedServicesSection = document.getElementById('selectedServicesSection');
    const suggestedSection = document.getElementById('suggestedSection');

    const suggestedServices = {
        "Minor Home Repairs": {
            "Drywall repair": {
                "Small holes": ["Nail holes", "Anchor holes", "Door knob holes"],
                "Large holes": ["Patch and paint", "Structural repair"],
                "Cracks": ["Hairline cracks", "Settlement cracks", "Tape joint cracks"],
                "Texture matching": ["Orange peel", "Knockdown", "Popcorn", "Smooth"]
            },
            "Door repair": {
                "Hinges": ["Tightening", "Replacement", "Adjustment"],
                "Locks": ["Rekeying", "Replacement", "Installation"],
                "Weather stripping": ["Door sweep", "Frame weatherstrip", "Threshold replacement"],
                "Door frame": ["Repair", "Replacement", "Reinforcement"]
            },
            "Window repair": {
                "Glass replacement": ["Single pane", "Double pane", "Safety glass"],
                "Weatherization": ["Caulking", "Weatherstripping", "Storm windows"],
                "Frame repair": ["Wood", "Vinyl", "Aluminum"],
                "Sash replacement": ["Single-hung", "Double-hung", "Sliding"]
            },
            "Tile repair": {
                "Grout repair": ["Cleaning", "Regrouting", "Sealing"],
                "Tile replacement": ["Ceramic", "Porcelain", "Natural stone"],
                "Sealing": ["Grout sealing", "Tile sealing"],
                "Re-caulking": ["Shower", "Bathtub", "Backsplash"]
            }
        },
        "Furniture": {
            "Assembly": {
                "IKEA furniture": ["Bedroom sets", "Living room furniture", "Dining sets", "Storage solutions"],
                "Other brand furniture": ["Wayfair", "Amazon Basics", "Overstock", "Local store purchases"],
                "Outdoor furniture": ["Patio sets", "Gazebos", "Pergolas", "Storage sheds"],
                "Office furniture": ["Desks", "Chairs", "Filing cabinets", "Bookcases"]
            },
            "Repair": {
                "Wood furniture": ["Scratches", "Dents", "Loose joints", "Refinishing"],
                "Upholstery": ["Tear repair", "Reupholstering", "Cushion restuffing"],
                "Metal furniture": ["Welding", "Painting", "Rust removal"],
                "Antique restoration": ["Cleaning", "Structural repair", "Finish restoration"]
            },
            "Moving": {
                "In-home rearrangement": ["Room optimization", "Feng shui", "New layout setup"],
                "Loading/Unloading": ["Truck loading", "Pod loading", "Storage unit organization"],
                "Furniture protection": ["Wrapping", "Padding", "Custom crating"],
                "Disassembly/Reassembly": ["Beds", "Tables", "Large wardrobes", "Sectionals"]
            },
            "Disassembly": {
                "IKEA furniture": ["For moving", "For disposal", "For repurposing"],
                "Other brand furniture": ["Modular sofas", "Bunk beds", "Wall units"],
                "For moving": ["Partial disassembly", "Complete breakdown", "Labeling for reassembly"],
                "For disposal": ["Eco-friendly disposal", "Donation preparation", "Recycling sorting"]
            }
        },
        "Wall Mounting": {
            "TV mounting": {
                "Flat screen": ["Up to 55\"", "55\"-75\"", "75\" and above"],
                "Curved screen": ["Samsung", "LG", "Sony"],
                "Above fireplace": ["With heat deflection", "Articulating mount", "Recessed"],
                "With cable management": ["In-wall wiring", "Cable concealment", "Power bridge installation"]
            },
            "Shelf installation": {
                "Floating shelves": ["Wood", "Glass", "Metal"],
                "Bracket shelves": ["Heavy duty", "Decorative", "Adjustable"],
                "Built-in shelves": ["Custom sizing", "Painting/finishing", "Lighting integration"],
                "Heavy duty shelves": ["Garage storage", "Industrial shelving", "Commercial grade"]
            },
            "Picture hanging": {
                "Single frame": ["Small (up to 20\")", "Medium (20\"-40\")", "Large (40\"+)"],
                "Gallery wall": ["Layout planning", "Template creation", "Multi-piece installation"],
                "Heavy mirrors": ["Bathroom", "Full-length", "Oversized"],
                "Artwork installation": ["Canvas stretching", "Sculpture mounting", "Valuable art handling"]
            },
            "Mirror installation": {
                "Bathroom mirror": ["Frameless", "Framed", "Medicine cabinet"],
                "Full-length mirror": ["Wall-mounted", "Door-mounted", "Free-standing securing"],
                "Decorative mirrors": ["Sunburst", "Venetian", "Mosaic"],
                "Custom shapes": ["Oval", "Hexagonal", "Asymmetrical"]
            }
        },
        "Electrical Help": {
            "Light fixture installation": {
                "Ceiling lights": ["Flush mount", "Semi-flush", "Chandelier"],
                "Wall sconces": ["Hardwired", "Plug-in", "Battery-operated"],
                "Pendant lights": ["Single", "Multi-light", "Linear"],
                "Recessed lighting": ["New installation", "Retrofit", "Smart LED"]
            },
            "Outlet repair": {
                "GFCI installation": ["Bathroom", "Kitchen", "Outdoor"],
                "USB outlet upgrade": ["Dual USB", "USB-C", "Combination outlets"],
                "Loose outlet fix": ["Tightening", "Replacement", "Box repair"],
                "New outlet installation": ["Standard", "20-amp", "240-volt"]
            },
            "Switch replacement": {
                "Dimmer switch": ["Single-pole", "3-way", "Smart dimmer"],
                "Smart switch": ["Wi-Fi enabled", "Z-Wave", "Bluetooth"],
                "Three-way switch": ["Installation", "Troubleshooting", "Upgrade"],
                "Timer switch": ["Digital", "Mechanical", "Astronomical"]
            },
            "Ceiling fan installation": {
                "With light kit": ["LED", "Dimmable", "Color changing"],
                "Remote control setup": ["Wall control", "Handheld remote", "Smart phone control"],
                "Balancing": ["Blade balancing", "Motor alignment", "Noise reduction"],
                "Existing wiring": ["Adapting old wiring", "Upgrading electrical box", "Adding support brace"]
            }
        },
        "Plumbing Help": {
            "Faucet repair": {
                "Leaky faucet": ["Cartridge replacement", "O-ring replacement", "Valve seat repair"],
                "Faucet replacement": ["Kitchen", "Bathroom", "Utility sink"],
                "Cartridge replacement": ["Single handle", "Double handle", "Thermostatic"],
                "Low water pressure fix": ["Aerator cleaning", "Pipe inspection", "Pressure regulator adjustment"]
            },
            "Toilet repair": {
                "Running toilet": ["Flapper replacement", "Fill valve repair", "Float adjustment"],
                "Clogged toilet": ["Plunging", "Auger use", "Removal and reset"],
                "Toilet replacement": ["Standard", "Comfort height", "Dual flush"],
                "Bidet installation": ["Attachment", "Integrated seat", "Full bidet fixture"]
            },
            "Drain cleaning": {
                "Sink drain": ["P-trap cleaning", "Drain snake use", "Chemical treatment"],
                "Bathtub drain": ["Hair removal", "Stopper mechanism repair", "Overflow gasket replacement"],
                "Shower drain": ["Grate cleaning", "Deep clog removal", "Drain camera inspection"],
                "Main line cleaning": ["Rooter service", "Hydro jetting", "Pipe relining"]
            },
            "Pipe leak repair": {
                "Under sink": ["Supply line repair", "Drain pipe repair", "Shutoff valve replacement"],
                "In wall": ["Leak detection", "Drywall repair", "Pipe replacement"],
                "Copper pipe": ["Soldering", "Compression fitting", "Pipe rerouting"],
                "PVC pipe": ["Glue joint repair", "Pipe replacement", "Fitting upgrade"]
            }
        },
        "Computer Repairs": {
            "Virus removal": {
                "Malware removal": ["Scan and clean", "System restore", "OS reinstallation"],
                "Spyware removal": ["Anti-spyware tools", "Browser cleanup", "Registry repair"],
                "System cleanup": ["Disk cleanup", "Startup optimization", "Software uninstallation"],
                "Security software installation": ["Antivirus", "Firewall", "Anti-malware"]
            },
            "Hardware upgrade": {
                "RAM upgrade": ["Desktop", "Laptop", "Compatibility check"],
                "SSD installation": ["OS migration", "Data transfer", "BIOS update"],
                "Graphics card upgrade": ["Installation", "Driver update", "Power supply check"],
                "CPU replacement": ["Thermal paste application", "Cooler installation", "BIOS update"]
            },
            "Software installation": {
                "Operating system": ["Windows", "MacOS", "Linux"],
                "Productivity software": ["Microsoft Office", "Adobe Creative Suite", "Accounting software"],
                "Antivirus software": ["Installation", "Configuration", "Subscription setup"],
                "Driver updates": ["Graphics", "Audio", "Network", "Peripheral devices"]
            },
            "Data recovery": {
                "Hard drive recovery": ["Logical recovery", "Physical recovery", "Disk imaging"],
                "SSD recovery": ["Firmware repair", "Controller chip recovery", "Data extraction"],
                "File system repair": ["Partition recovery", "Boot sector repair", "File table reconstruction"],
                "Backup solution setup": ["Cloud backup", "External drive setup", "Network-attached storage"]
            }
        }
    };

    let selectedServices = [];
    let hasCompletedSelection = false;

    function updateSelectedServices() {
        selectedServicesSection.innerHTML = '';
        if (selectedServices.length > 0) {
            const serviceList = document.createElement('div');
            selectedServices.forEach(service => {
                const button = document.createElement('button');
                button.className = 'selected-service-btn';
                button.innerHTML = `${service} <span class="remove-service">√ó</span>`;
                button.querySelector('.remove-service').addEventListener('click', (e) => {
                    e.stopPropagation();
                    removeService(service);
                });
                serviceList.appendChild(button);
            });
            selectedServicesSection.appendChild(serviceList);

            if (!document.querySelector('.clear-all-btn')) {
                const clearAllButton = document.createElement('button');
                clearAllButton.textContent = 'Clear All';
                clearAllButton.className = 'clear-all-btn';
                clearAllButton.addEventListener('click', clearAllServices);
                selectedServicesSection.appendChild(clearAllButton);
            }
        }

        if (hasCompletedSelection) {
            taskDetails.style.display = 'block';
            bookButton.style.display = 'block';
        }
    }

    function removeService(service) {
        selectedServices = selectedServices.filter(s => s !== service);
        updateSelectedServices();
    }

    function clearAllServices() {
        selectedServices = [];
        hasCompletedSelection = false;
        updateSelectedServices();
        suggestedSection.innerHTML = '';
        taskDetails.style.display = 'none';
        bookButton.style.display = 'none';
    }

    function showSuggestedServices(category, subcategory = null, subsubcategory = null, subsubsubcategory = null) {
        suggestedSection.innerHTML = '';
        let currentLevel = suggestedServices[category];
        let title = category;

        if (subcategory) {
            currentLevel = currentLevel[subcategory];
            title = subcategory;
            if (subsubcategory) {
                currentLevel = currentLevel[subsubcategory];
                title = subsubcategory;
                if (subsubsubcategory) {
                    currentLevel = currentLevel[subsubsubcategory];
                    title = subsubsubcategory;
                }
            }
        }

        const heading = document.createElement('h3');
        heading.textContent = `Options for ${title}:`;
        suggestedSection.appendChild(heading);

        const optionsContainer = document.createElement('div');
        optionsContainer.className = 'suggested-options';

        if (Array.isArray(currentLevel)) {
            currentLevel.forEach(option => {
                const button = document.createElement('button');
                button.textContent = option;
                button.addEventListener('click', () => selectSuggestedService(category, subcategory, subsubcategory, subsubsubcategory, option));
                optionsContainer.appendChild(button);
            });
        } else {
            Object.keys(currentLevel).forEach(option => {
                const button = document.createElement('button');
                button.textContent = option;
                button.addEventListener('click', () => {
                    if (subsubsubcategory) {
                        selectSuggestedService(category, subcategory, subsubcategory, subsubsubcategory, option);
                    } else if (subsubcategory) {
                        showSuggestedServices(category, subcategory, subsubcategory, option);
                    } else if (subcategory) {
                        showSuggestedServices(category, subcategory, option);
                    } else {
                        showSuggestedServices(category, option);
                    }
                });
                optionsContainer.appendChild(button);
            });
        }

        suggestedSection.appendChild(optionsContainer);

        const backButton = document.createElement('button');
        backButton.id = 'backButton';
        backButton.textContent = 'Back';
        backButton.addEventListener('click', () => {
            if (subsubsubcategory) {
                showSuggestedServices(category, subcategory, subsubcategory);
            } else if (subsubcategory) {
                showSuggestedServices(category, subcategory);
            } else if (subcategory) {
                showSuggestedServices(category);
            } else {
                suggestedSection.innerHTML = '';
            }
        });
        suggestedSection.appendChild(backButton);
    }

    function selectSuggestedService(category, subcategory, subsubcategory, subsubsubcategory, option) {
        let service = `${category} - ${subcategory}`;
        if (subsubcategory) {
            service += ` - ${subsubcategory}`;
        }
        if (subsubsubcategory) {
            service += ` - ${subsubsubcategory}`;
        }
        if (option) {
            service += ` - ${option}`;
        }
        if (!selectedServices.includes(service)) {
            selectedServices.push(service);
            hasCompletedSelection = true;
            updateSelectedServices();
        }
        suggestedSection.innerHTML = '';
    }

        serviceOptions.forEach(option => {
        option.addEventListener('click', function() {
            const category = this.textContent;
            showSuggestedServices(category);
        });
    });

    bookButton.addEventListener('click', function() {
        if (selectedServices.length === 0) {
            alert('Please select at least one service before booking.');
        } else {
            const additionalDetails = taskTextarea.value;
            alert(`Booking confirmed for: ${selectedServices.join(', ')}\n\nAdditional details: ${additionalDetails}`);
        }
    });

    // Contact modal functionality
    var modal = document.getElementById('mycontactModal');
    var btn = document.getElementById('contactBtn');
    var span = document.getElementsByClassName('contactModalClose')[0];

    btn.onclick = function() {
        modal.style.display = 'block';
    }

    span.onclick = function() {
        modal.style.display = 'none';
    }

    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = 'none';
        }
    }

    // Contact option buttons functionality
    document.getElementById('emailBtn').addEventListener('click', function() {
        window.location.href = 'mailto:tom@example.com';
    });

    document.getElementById('callBtn').addEventListener('click', function() {
        window.location.href = 'tel:+1234567890';
    });

    document.getElementById('contactCardBtn').addEventListener('click', function() {
        // Add functionality to download or display contact card
        alert('Contact card functionality to be implemented');
    });

    document.getElementById('smsBtn').addEventListener('click', function() {
        window.location.href = 'sms:+1234567890';
    });

    // Manage Your Visit button functionality
    const manageVisitBtn = document.querySelector('.manage-visit-button');
    manageVisitBtn.addEventListener('click', function() {
        alert('Redirecting to Manage Your Visit page...');
        // Add actual redirection or functionality here
    });

    // Function to handle window resize
    function handleResize() {
        if (window.innerWidth <= 600) {
            document.querySelector('.service-options').style.gridTemplateColumns = '1fr';
        } else {
            document.querySelector('.service-options').style.gridTemplateColumns = 'repeat(2, 1fr)';
        }
    }

    // Add event listener for window resize
    window.addEventListener('resize', handleResize);

    // Call handleResize initially to set the correct layout
    handleResize();
});
</script>
</body>
</html>
